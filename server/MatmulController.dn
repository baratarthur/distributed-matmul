const char debugMSG[] = "[@MatmulController]"

component provides server.MatmulController requires io.Output out, matmul.Matmul mat, data.IntUtil iu,
    data.StringUtil su, data.json.JSONEncoder je {

    const char resource[] = "/matmul"
    
    Response MatmulController:handle(HTTPMessage request) {
        // out.println("$debugMSG - resource requested - $(request.resource)")
        if(request.resource == resource) {
            if(request.command == "POST") return handlePost(request)
        }

        return null
    }

    Response handlePost(HTTPMessage request) {
        // out.println("$debugMSG - method requested - POST")
        // out.println("$debugMSG - post body - $(request.postData)")
        MultiplyParamsFormat matrixData = je.jsonToData(request.postData, typeof(MultiplyParamsFormat))
        // out.println("$debugMSG - post body - $(je.jsonFromData(matrixData))")
        Matrix result = mat.multiply(mat.charToMatrix(matrixData.A), mat.charToMatrix(matrixData.B))
        return buildResponseCode200(mat.matrixToChar(result), request.mimeType)
    }

    Response buildResponseCode200(char content[], char mimeType[]) {
        return new Response(
            200,
            "OK",
            HTTPUtil.SERVER_NAME,
            content.arrayLength,
            mimeType,
            content
        )
    }
}